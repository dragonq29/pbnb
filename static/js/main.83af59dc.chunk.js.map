{"version":3,"sources":["App.js","index.js"],"names":["today","Date","day","getDay","dayNames","month","getMonth","date","getDate","pbnb","yyyymmdd","moment","format","App","useState","breakfirst","setBreakfirst","lunch","setLunch","dinner","setDinner","requestParams","end_dt","st_dt","bizplc_cd","useEffect","axios","post","then","response","dataList","data","todayList","filter","m","meald_fg_cd","map","menu","name","disp_nm","coner_fg","coner_fg_cd","catch","error","id","adUnit","adWidth","adHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAOMA,EAAQ,IAAIC,KACZC,EAAMF,EAAMG,SACZC,EAAW,CACf,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,wBAEIC,EAAQL,EAAMM,WAAa,EAC3BC,EAAOP,EAAMQ,UACbC,GAAQJ,EAAQH,GAAO,IAAM,EAC7BQ,EAAWC,MAASC,OAAO,YAmGlBC,MAjGf,WACE,IAGA,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAgB,CACpBC,OAAQZ,EACRa,MAAOb,EACPc,UAAW,SA8Bb,OA3BAC,qBAAU,WACRC,IACGC,KAdH,6DAcaN,GACVO,MAAK,SAAUC,GACd,IAAMC,EAAWD,EAASE,KAAKC,UAC/BhB,EACEc,EACGG,QAAO,SAACC,GAAD,MAAyB,SAAlBA,EAAEC,eAChBC,KAAI,SAACC,GAAD,MAAW,CAAEC,KAAMD,EAAKE,QAASC,SAAUH,EAAKI,iBAEzDvB,EACEY,EACGG,QAAO,SAACC,GAAD,MAAyB,SAAlBA,EAAEC,eAChBC,KAAI,SAACC,GAAD,MAAW,CAAEC,KAAMD,EAAKE,QAASC,SAAUH,EAAKI,iBAEzDrB,EACEU,EACGG,QAAO,SAACC,GAAD,MAAyB,SAAlBA,EAAEC,eAChBC,KAAI,SAACC,GAAD,MAAW,CAAEC,KAAMD,EAAKE,QAASC,SAAUH,EAAKI,oBAI1DC,OAAM,SAAUC,SAGlB,IAGD,qCACE,sBAAKC,GAAG,SAAR,UACE,+BACGvC,EADH,IACWE,EADX,IACkBH,EAASF,MAE3B,qDAASO,EAAO,eAAO,kBACvB,wBACA,oEACA,6BACGM,EACEkB,QAAO,SAACI,GAAD,MAA4B,SAAlBA,EAAKG,YACtBJ,KAAI,SAACC,GAAD,OACH,6BAAKA,EAAKC,YAGhB,+CACA,6BACGvB,EACEkB,QAAO,SAACI,GAAD,MAA4B,SAAlBA,EAAKG,YACtBJ,KAAI,SAACC,GAAD,OACH,6BAAKA,EAAKC,YAGhB,oEACA,6BACGrB,EACEgB,QAAO,SAACI,GAAD,MAA4B,SAAlBA,EAAKG,YACtBJ,KAAI,SAACC,GAAD,OACH,6BAAKA,EAAKC,YAGhB,+CACA,6BACGrB,EACEgB,QAAO,SAACI,GAAD,MAA4B,SAAlBA,EAAKG,YACtBJ,KAAI,SAACC,GAAD,OACH,6BAAKA,EAAKC,YAGhB,+CACA,6BACGnB,EAAOiB,KAAI,SAACC,GAAD,OACV,6BAAKA,EAAKC,eAIhB,cAAC,IAAD,CACAO,OAAO,uBACPC,QAAQ,MACRC,SAAS,WC9GfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83af59dc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport gfood from \"./gfood\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport AdfitWebComponent from 'react-adfit-web-component'\n\nconst today = new Date();\nconst day = today.getDay();\nconst dayNames = [\n  \"(일요일)\",\n  \"(월요일)\",\n  \"(화요일)\",\n  \"(수요일)\",\n  \"(목요일)\",\n  \"(금요일)\",\n  \"(토요일)\",\n];\nconst month = today.getMonth() + 1;\nconst date = today.getDate();\nconst pbnb = (month + day) % 2 === 0; // true : 빠밥\nconst yyyymmdd = moment().format(\"YYYYMMDD\");\n\nfunction App() {\n  const URL =\n    \"https://asia-northeast1-pbnb-2f164.cloudfunctions.net/menu\";\n\n  const [breakfirst, setBreakfirst] = useState([]);\n  const [lunch, setLunch] = useState([]);\n  const [dinner, setDinner] = useState([]);\n\n  const requestParams = {\n    end_dt: yyyymmdd,\n    st_dt: yyyymmdd,\n    bizplc_cd: \"10095\",\n  };\n\n  useEffect(() => {\n    axios\n      .post(URL, requestParams)\n      .then(function (response) {\n        const dataList = response.data.todayList;\n        setBreakfirst(\n          dataList\n            .filter((m) => m.meald_fg_cd === \"0001\")\n            .map((menu) => ({ name: menu.disp_nm, coner_fg: menu.coner_fg_cd }))\n        );\n        setLunch(\n          dataList\n            .filter((m) => m.meald_fg_cd === \"0002\")\n            .map((menu) => ({ name: menu.disp_nm, coner_fg: menu.coner_fg_cd }))\n        );\n        setDinner(\n          dataList\n            .filter((m) => m.meald_fg_cd === \"0003\")\n            .map((menu) => ({ name: menu.disp_nm, coner_fg: menu.coner_fg_cd }))\n        );\n        // console.log(dataList.filter(m => m.meald_fg_cd === \"0003\").map((menu) => ({name: menu.disp_nm})));\n      })\n      .catch(function (error) {\n        // 오류발생시 실행\n      });\n  }, []);\n\n  return (\n    <>\n      <div id=\"header\">\n        <h1>\n          {month}/{date} {dayNames[day]}\n        </h1>\n        <h3>오늘은 {pbnb ? \"빠밥\" : \"늦밥\"}</h3>\n        <div></div>\n        <div>조식 - 간편식</div>\n        <ul>\n          {breakfirst\n            .filter((menu) => menu.coner_fg === \"0002\")\n            .map((menu) => (\n              <li>{menu.name}</li>\n            ))}\n        </ul>\n        <div>조식</div>\n        <ul>\n          {breakfirst\n            .filter((menu) => menu.coner_fg === \"0001\")\n            .map((menu) => (\n              <li>{menu.name}</li>\n            ))}\n        </ul>\n        <div>중식 - 간편식</div>\n        <ul>\n          {lunch\n            .filter((menu) => menu.coner_fg === \"0002\")\n            .map((menu) => (\n              <li>{menu.name}</li>\n            ))}\n        </ul>\n        <div>중식</div>\n        <ul>\n          {lunch\n            .filter((menu) => menu.coner_fg === \"0001\")\n            .map((menu) => (\n              <li>{menu.name}</li>\n            ))}\n        </ul>\n        <div>석식</div>\n        <ul>\n          {dinner.map((menu) => (\n            <li>{menu.name}</li>\n          ))}\n        </ul>\n      </div>\n      <AdfitWebComponent\n      adUnit=\"DAN-lbt4eC5RTpmNpdfG\"\n      adWidth=\"320\"\n      adHeight=\"50\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}