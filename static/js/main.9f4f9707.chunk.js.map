{"version":3,"sources":["App.js","index.js"],"names":["today","Date","day","getDay","dayNames","month","getMonth","date","getDate","pbnb","yyyymmdd","moment","format","App","useState","breakfirst","setBreakfirst","lunch","setLunch","dinner","setDinner","requestParams","end_dt","st_dt","bizplc_cd","useEffect","axios","post","then","response","dataList","data","todayList","filter","m","meald_fg_cd","map","menu","name","disp_nm","coner_fg","coner_fg_cd","catch","error","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAMMA,EAAQ,IAAIC,KACZC,EAAMF,EAAMG,SACZC,EAAW,CACf,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,wBAEIC,EAAQL,EAAMM,WAAa,EAC3BC,EAAOP,EAAMQ,UACbC,GAAQJ,EAAQH,GAAO,IAAM,EAC7BQ,EAAWC,MAASC,OAAO,YAmElBC,MAjEf,WACE,IAEA,EAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA6BJ,mBAAS,IAAtC,mBAAOK,EAAP,KAAeC,EAAf,KAGMC,EAAgB,CACpBC,OAAQZ,EACRa,MAAOb,EACPc,UAAW,SAqBb,OAlBAC,qBAAU,WACRC,IACCC,KAfS,wEAiBRN,GAEDO,MAAK,SAAUC,GACd,IAAMC,EAAWD,EAASE,KAAKC,UAC/BhB,EAAcc,EAASG,QAAO,SAAAC,GAAC,MAAsB,SAAlBA,EAAEC,eAAwBC,KAAI,SAACC,GAAD,MAAW,CAACC,KAAMD,EAAKE,QAASC,SAAUH,EAAKI,iBAChHvB,EAASY,EAASG,QAAO,SAAAC,GAAC,MAAsB,SAAlBA,EAAEC,eAAwBC,KAAI,SAACC,GAAD,MAAW,CAACC,KAAMD,EAAKE,QAASC,SAAUH,EAAKI,iBAC3GrB,EAAUU,EAASG,QAAO,SAAAC,GAAC,MAAsB,SAAlBA,EAAEC,eAAwBC,KAAI,SAACC,GAAD,MAAW,CAACC,KAAMD,EAAKE,QAASC,SAAUH,EAAKI,oBAG7GC,OAAM,SAAUC,SAGhB,IAGD,8BACE,sBAAKC,GAAG,SAAR,UACE,+BACGvC,EADH,IACWE,EADX,IACkBH,EAASF,MAE3B,qDAASO,EAAO,eAAO,kBACvB,wBACA,oEACA,6BACGM,EAAWkB,QAAO,SAACI,GAAD,MAA2B,SAAjBA,EAAKG,YAAoBJ,KAAI,SAACC,GAAD,OAAU,6BAAKA,EAAKC,YAEhF,+CACA,6BACGvB,EAAWkB,QAAO,SAACI,GAAD,MAA2B,SAAjBA,EAAKG,YAAoBJ,KAAI,SAACC,GAAD,OAAU,6BAAKA,EAAKC,YAEhF,oEACA,6BACGrB,EAAMgB,QAAO,SAACI,GAAD,MAA2B,SAAjBA,EAAKG,YAAoBJ,KAAI,SAACC,GAAD,OAAU,6BAAKA,EAAKC,YAE3E,+CACA,6BACGrB,EAAMgB,QAAO,SAACI,GAAD,MAA2B,SAAjBA,EAAKG,YAAoBJ,KAAI,SAACC,GAAD,OAAU,6BAAKA,EAAKC,YAE3E,+CACA,6BACGnB,EAAOiB,KAAI,SAACC,GAAD,OAAU,6BAAKA,EAAKC,kBC5E1CO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f4f9707.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport gfood from \"./gfood\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst today = new Date();\nconst day = today.getDay();\nconst dayNames = [\n  \"(일요일)\",\n  \"(월요일)\",\n  \"(화요일)\",\n  \"(수요일)\",\n  \"(목요일)\",\n  \"(금요일)\",\n  \"(토요일)\",\n];\nconst month = today.getMonth() + 1;\nconst date = today.getDate();\nconst pbnb = (month + day) % 2 === 0; // true : 빠밥\nconst yyyymmdd = moment().format(\"YYYYMMDD\");\n\nfunction App() {\n  const URL = \"http://3.36.127.146:8000/smartfood/todaymenuGf/todayMenu_nList_pro.do\";\n  \n  const [breakfirst, setBreakfirst]  = useState([])\n  const [lunch, setLunch]  = useState([])\n  const [dinner, setDinner]  = useState([])\n\n   \n  const requestParams = {\n    end_dt: yyyymmdd,\n    st_dt: yyyymmdd,\n    bizplc_cd: \"10095\",\n  }\n\n  useEffect(() => {\n    axios\n    .post(\n      URL,\n      requestParams\n    )\n    .then(function (response) {\n      const dataList = response.data.todayList;\n      setBreakfirst(dataList.filter(m => m.meald_fg_cd === \"0001\").map((menu) => ({name: menu.disp_nm, coner_fg: menu.coner_fg_cd})));\n      setLunch(dataList.filter(m => m.meald_fg_cd === \"0002\").map((menu) => ({name: menu.disp_nm, coner_fg: menu.coner_fg_cd})));\n      setDinner(dataList.filter(m => m.meald_fg_cd === \"0003\").map((menu) => ({name: menu.disp_nm, coner_fg: menu.coner_fg_cd})));\n      // console.log(dataList.filter(m => m.meald_fg_cd === \"0003\").map((menu) => ({name: menu.disp_nm})));\n    })\n    .catch(function (error) {\n      // 오류발생시 실행\n    });\n  }, []);\n  \n  return (\n    <div>\n      <div id=\"header\">\n        <h1>\n          {month}/{date} {dayNames[day]}\n        </h1>\n        <h3>오늘은 {pbnb ? \"빠밥\" : \"늦밥\"}</h3>\n        <div></div>\n        <div>조식 - 간편식</div>\n        <ul>\n          {breakfirst.filter((menu) => menu.coner_fg ===\"0002\").map((menu) => <li>{menu.name}</li>)}          \n        </ul>\n        <div>조식</div>\n        <ul>\n          {breakfirst.filter((menu) => menu.coner_fg ===\"0001\").map((menu) => <li>{menu.name}</li>)}          \n        </ul>\n        <div>중식 - 간편식</div>\n        <ul>\n          {lunch.filter((menu) => menu.coner_fg ===\"0002\").map((menu) => <li>{menu.name}</li>)}          \n        </ul>\n        <div>중식</div>\n        <ul>\n          {lunch.filter((menu) => menu.coner_fg ===\"0001\").map((menu) => <li>{menu.name}</li>)}          \n        </ul>\n        <div>석식</div>\n        <ul>\n          {dinner.map((menu) => <li>{menu.name}</li>)}          \n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}